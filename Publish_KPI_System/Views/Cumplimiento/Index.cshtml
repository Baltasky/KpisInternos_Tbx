@using KPI_System.Models.Cumplimiento
@model CumplimientoViewModel

@{
    ViewBag.Title = "Cumplimiento";

    //------Variables Matenimiento ------
    int MantenimientoProgramadas = 0;
    int MantenimientoMantto = 0;
    decimal MantenimientoPorcentaje = 0;
    decimal MantenimientoCumplimiento = 0;

    //------Variables Calibración ------
    int CalibracionProgramadas = 0;
    int CalibracionMantto = 0;
    decimal CalibracionPorcentaje = 0;
    decimal CalibracionCumplimiento = 0;

    //------Variables Capacitación ------
    int CapacitacionProgramadas = 0;
    int CapacitacionMantto = 0;
    decimal CapacitacionPorcentaje = 0;
    decimal CapacitacionCumplimiento = 0;

    //------Variables Certificación ------
    int CertificacionProgramadas = 0;
    int CertificacionMantto = 0;
    decimal CertificacionPorcentaje = 0;
    decimal CertificacionCumplimiento = 0;

    //------Validar contenido de datos Mantenimiento ------
    if (Model.Mantenimiento.Any())
    {
        MantenimientoProgramadas = Model.Mantenimiento.First().Programadas;
        MantenimientoMantto = Model.Mantenimiento.First().Mantto;
        MantenimientoPorcentaje = Model.Mantenimiento.First().Porcentaje;
        MantenimientoCumplimiento = Model.Mantenimiento.First().Cumplimiento;
    }

    //------Validar contenido de datos Calibracion ------
    if (Model.Calibracion.Any())
    {
        CalibracionProgramadas = Model.Calibracion.First().Programadas;
        CalibracionMantto = Model.Calibracion.First().Mantto;
        CalibracionPorcentaje = Model.Calibracion.First().Porcentaje;
        CalibracionCumplimiento = Model.Calibracion.First().Cumplimiento;
    }
    //------Validar contenido de datos Capacitación ------
    if (Model.Capacitacion.Any())
    {
        CapacitacionProgramadas = Model.Capacitacion.First().Programadas;
        CapacitacionMantto = Model.Capacitacion.First().Mantto;
        CapacitacionPorcentaje = Model.Capacitacion.First().Porcentaje;
        CapacitacionCumplimiento = Model.Capacitacion.First().Cumplimiento;
    }
    //------Validar contenido de datos Capacitación ------
    if (Model.Certificacion.Any())
    {
        CertificacionProgramadas = Model.Certificacion.First().Programadas;
        CertificacionMantto = Model.Certificacion.First().Mantto;
        CertificacionPorcentaje = Model.Certificacion.First().Porcentaje;
        CertificacionCumplimiento = Model.Certificacion.First().Cumplimiento;
    }




}

<div class="post d-flex flex-column-fluid">
    <div id="kt_content_container" class="container-fluid">
        <div id="">
            <div class="card mb-5">
                <div class="card p-5 mb-0">
                    <form id="FormFecha" action="/Cumplimiento/Index" method="post">
                        <div class="row">
                            
                            <div class="col-lg-2">
                                <label class="fs-7 fw-semibold mb-2">Selecciona un Mes: </label>
                                @*<div class="position-relative d-flex align-items-center fv-row">
            <span class="svg-icon svg-icon-2 position-absolute mx-4"><i class="fas fa-calendar-alt fs-3"></i></span>
            <input name="Fecha" id="IdFecha" class="form-control p-2 fs-7 ps-10" placeholder="Seleccionar Fecha" value="@Model.Fecha" />
        </div>*@
                                <div class="input-group input-group flex-nowrap">
                                    <span class="input-group-text">
                                        <i class="fas fa-calendar-alt fs-3"></i>
                                    </span>
                                    <div class="overflow-hidden flex-grow-1">
                                        <select name="FechaMes" id="IdFecha"  data-selected="" class="form-select form-select fs-7  rounded-start-0 border-start" data-control="select2" data-placeholder="Select an option">
                                            <option></option>
                                            <option value="1">Enero</option>
                                            <option value="2">Febrero</option>
                                            <option value="3">Marzo</option>
                                            <option value="4">Abril</option>
                                            <option value="5">Mayo</option>
                                            <option value="6">Junio</option>
                                            <option value="7">Julio</option>
                                            <option value="8">Agosto</option>
                                            <option value="9">Septiembre</option>
                                            <option value="10">Octubre</option>
                                            <option value="11">Noviembre</option>
                                            <option value="12">Diciembre</option>
                                        </select>
                                    </div>
                                </div>

                            </div>
                            <div class="col-md-1 fv-row">
                                <label class=" fs-7 fw-semibold mb-2">Año: </label>
                                <input name="FechaAnio" id="IdAnioActual" class="form-control  fs-7" placeholder="Año" type="number" min="2023" />
                            </div>

                            <div class="col-lg-2 fv-row pt-8">
                                <button type="button" onclick="GetCumplimientos()" class="btn btn-primary p-3 fs-8 me-3"><i class="fas fa-chart-line"></i>Generar</button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        @if (Model.Mantenimiento.Any() || Model.Capacitacion.Any() || Model.Capacitacion.Any() || Model.Certificacion.Any())
        {
            <div class="" id="CardFiltros">
                <div class="row g-2 g-xl-5">
                    <div class="col-xl-3">
                        <div class="card card-xl-stretch mb-xl-8">
                            <div class="card-header border-0 pt-5">
                                <h3 class="card-title align-items-start flex-column">
                                    <span class="card-label fw-bold text-dark">
                                        Mantenimiento
                                    </span>
                                </h3>
                            </div>

                            <div class="card-body pt-5">
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Partidas Programadas:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@MantenimientoProgramadas" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Partidas con Mtto:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@MantenimientoMantto" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        % Cumplimiento Mtto:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@MantenimientoPorcentaje" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Obj. Cumplimiento:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@MantenimientoCumplimiento" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                            </div>


                        </div>
                    </div>

                    <div class="col-xl-3">
                        <div class="card card-xl-stretch mb-xl-8">
                            <div class="card-header border-0 pt-5">
                                <h3 class="card-title align-items-start flex-column">
                                    <span class="card-label fw-bold text-dark">
                                        Calibración
                                    </span>
                                </h3>
                            </div>
                            <div class="card-body pt-5">
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Partidas Programadas:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CalibracionProgramadas" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Partidas con Calibración:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CalibracionMantto" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        % Cumplimiento Calibración:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CalibracionPorcentaje" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Obj. Cumplimiento:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CalibracionCumplimiento" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-3">
                        <div class="card card-xl-stretch mb-xl-8">
                            <div class="card-header border-0 pt-5">
                                <h3 class="card-title align-items-start flex-column">
                                    <span class="card-label fw-bold text-dark">
                                        Capacitación
                                    </span>
                                </h3>
                                @using (Html.BeginForm("DownloadExcel", "Cumplimiento", FormMethod.Post))
                                {
                                    <input type="submit" value="Descargar Excel" class="btn btn-info p-2" />
                                }


                            </div>
                            <div class="card-body pt-5">
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Cursos Programadas:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CapacitacionProgramadas" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Cursos Aplicados:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CapacitacionMantto" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        % Cumplimiento Cursos:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CapacitacionPorcentaje" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Obj. Cumplimiento:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CapacitacionCumplimiento" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-xl-3">
                        <div class="card card-xl-stretch mb-xl-8">
                            <div class="card-header border-0 pt-5">
                                <h3 class="card-title align-items-start flex-column">
                                    <span class="card-label fw-bold text-dark">
                                        Certificación

                                    </span>
                                </h3>
                            </div>
                            <div class="card-body pt-5">
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Herramientas Programadas:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CertificacionProgramadas" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Herramientas con Certificadas:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CertificacionMantto" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        % Cumplimiento Certificación:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CertificacionPorcentaje" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                                <div class="row mb-2">
                                    <label class="col-8 fw-semibold text-muted pt-3">
                                        Obj. Cumplimiento:
                                    </label>
                                    <div class="col-lg-4">
                                        <input id="" value="@CertificacionCumplimiento" class="form-control form-control-solid border" disabled />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="card p-5 mb-0">
                    <div class="card card-flush h-md-100">
                        <div class="card-header pt-7  mb-0 pb-0">
                            <h3 class="card-title align-items-start flex-column">
                                <span class="card-label fw-bold text-dark">Grafica</span>
                            </h3>
                        </div>
                        <div class="card-body pt-1">

                            <div id="chartdiv"></div>

                        </div>
                    </div>
                </div>

            </div>
        }
        else
        {
            if (Model.Fecha != "")
            {
                <div class="alert alert-primary d-flex align-items-center p-5">
                    <i class="ki-duotone ki-shield-tick fs-2hx text-primary me-4"><span class="path1"></span><span class="path2"></span></i>
                    <div class="d-flex flex-column">
                        <span>No se encontraron datos capturados en el mes seleccionado.</span>
                    </div>
                </div>
            }

        }


    </div>


</div>

<!-- Styles -->
<style>
    #chartdiv {
        width: 100%;
        height: 500px;
    }
</style>


@section scripts {
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/themes/Material.js"></script>

    <script type="text/javascript" src="~/Scripts/Cumplimiento/Cumplimiento.js"></script>


    @if (Model.Mantenimiento.Any() || Model.Capacitacion.Any() || Model.Capacitacion.Any() || Model.Certificacion.Any())
    {
        <script>
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
            ////////////////////////////////////////////////////// GRAFICAS ///////////////////////////////////////////////////////////////////
            //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

            //********* Start   ****************************************************************************************

            var xAxis;
            var series;
            am5.ready(function () {

                // Create root element
                // https://www.amcharts.com/docs/v5/getting-started/#Root_element
                var root = am5.Root.new("chartdiv");

                // Set themes
                // https://www.amcharts.com/docs/v5/concepts/themes/
                root.setThemes([
                    am5themes_Material.new(root)
                ]);

                root._logo.dispose();

                // Create chart
                // https://www.amcharts.com/docs/v5/charts/xy-chart/
                var chart = root.container.children.push(
                    am5xy.XYChart.new(root, {
                        panX: false,
                        panY: false,
                        wheelX: "none",
                        wheelY: "none"
                    })
                );

                // Add cursor
                // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/
                var cursor = chart.set("cursor", am5xy.XYCursor.new(root, {}));
                cursor.lineY.set("visible", false);

                // Create axes
                // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/
                var xRenderer = am5xy.AxisRendererX.new(root, { minGridDistance: 30 });
                xRenderer.labels.template.setAll({ text: "", rotation: -70 }); /*sin texto debajo de cada Barra*/

                xAxis = chart.xAxes.push(
                    am5xy.CategoryAxis.new(root, {
                        maxDeviation: 0,
                        categoryField: "category",
                        renderer: xRenderer,
                        tooltip: am5.Tooltip.new(root, {
                            labelText: "{realName}"
                        })
                    })
                );

                var yAxis = chart.yAxes.push(
                    am5xy.ValueAxis.new(root, {
                        maxDeviation: 0.3,
                        renderer: am5xy.AxisRendererY.new(root, {})
                    })
                );

                var yAxis2 = chart.yAxes.push(
                    am5xy.ValueAxis.new(root, {
                        maxDeviation: 0.3,
                        syncWithAxis: yAxis,
                        renderer: am5xy.AxisRendererY.new(root, { opposite: true })
                    })
                );

                // Create series
                // https://www.amcharts.com/docs/v5/charts/xy-chart/series/
                series = chart.series.push(
                    am5xy.ColumnSeries.new(root, {
                        name: "Series 1",
                        xAxis: xAxis,
                        yAxis: yAxis2,
                        valueYField: "value",
                        sequencedInterpolation: true,
                        categoryXField: "category",
                        tooltip: am5.Tooltip.new(root, {
                            labelText: "{realName}: {valueY}"
                        })
                    })
                );

                series.columns.template.setAll({
                    fillOpacity: 0.9,
                    strokeOpacity: 0
                });
                series.columns.template.adapters.add("fill", (fill, target) => {
                    return chart.get("colors").getIndex(series.columns.indexOf(target));
                });

                series.columns.template.adapters.add("stroke", (stroke, target) => {
                    return chart.get("colors").getIndex(series.columns.indexOf(target));
                });

                var lineSeries = chart.series.push(
                    am5xy.LineSeries.new(root, {
                        name: "Series 2",
                        xAxis: xAxis,
                        yAxis: yAxis,
                        valueYField: "quantity",
                        sequencedInterpolation: true,
                        stroke: chart.get("colors").getIndex(13),
                        fill: chart.get("colors").getIndex(13),
                        categoryXField: "category",
                        tooltip: am5.Tooltip.new(root, {
                            labelText: "{valueY}"
                        })
                    })
                );

                lineSeries.strokes.template.set("strokeWidth", 2);

                lineSeries.bullets.push(function () {
                    return am5.Bullet.new(root, {
                        locationY: 1,
                        locationX: undefined,
                        sprite: am5.Circle.new(root, {
                            radius: 5,
                            fill: lineSeries.get("fill")
                        })
                    });
                });

                // when data validated, adjust location of data item based on count
                lineSeries.events.on("datavalidated", function () {
                    am5.array.each(lineSeries.dataItems, function (dataItem) {
                        // if count divides by two, location is 0 (on the grid)
                        if (
                            dataItem.dataContext.count / 2 ==
                            Math.round(dataItem.dataContext.count / 2)
                        ) {
                            dataItem.set("locationX", 0);
                        }
                        // otherwise location is 0.5 (middle)
                        else {
                            dataItem.set("locationX", 0.5);
                        }
                    });
                });

                var chartData = [];


                // Set data 
                // se concentrado de datos para mostrar en graficas
                var data = {
                    "Mantenimiento": {
                        "Partidas Programadas": @MantenimientoProgramadas,
                        "Partidas con Mtto": @MantenimientoMantto,
                        "% Cumplimiento Mtto": @MantenimientoPorcentaje,
                        "Obj. Cumplimiento": @MantenimientoCumplimiento
                    },
                    "Calibración": {
                        "Partidas Programadas": @CalibracionProgramadas,
                        "Partidas con Calibración": @CalibracionMantto,
                        "% Cumplimiento Calibración": @CapacitacionPorcentaje,
                        "Obj. Cumplimiento": @CapacitacionCumplimiento
                    },
                    "Capacitación": {
                        "Cursos Programadas":  @CapacitacionProgramadas,
                        "Cursos Aplicados": @CapacitacionMantto,
                        "% Cumplimiento Cursos": @CapacitacionPorcentaje,
                        "Obj. Cumplimiento": @CapacitacionCumplimiento
                    },
                    "Certificación": {
                        "Herramientas Programadas": @CertificacionProgramadas,
                        "Herramientas con Certificadas": @CertificacionMantto,
                        "% Cumplimiento Certificación": @MantenimientoPorcentaje,
                        "Obj. Cumplimiento": @CertificacionCumplimiento
                    }
                };

                // process data ant prepare it for the chart
                for (var providerName in data) {
                    var providerData = data[providerName];

                    // add data of one provider to temp array
                    var tempArray = [];
                    var count = 0;
                    // add items
                    for (var itemName in providerData) {
                        if (itemName != "quantity") {
                            count++;
                            // we generate unique category for each column (providerName + "_" + itemName) and store realName
                            tempArray.push({
                                category: providerName + "_" + itemName,
                                realName: itemName,
                                value: providerData[itemName],
                                provider: providerName
                            });
                        }
                    }
                    // sort temp array
                    tempArray.sort(function (a, b) {
                        if (a.value > b.value) {
                            return 1;
                        } else if (a.value < b.value) {
                            return -1;
                        } else {
                            return 0;
                        }
                    });

                    // add quantity and count to middle data item (line series uses it)
                    var lineSeriesDataIndex = Math.floor(count / 2);
                    tempArray[lineSeriesDataIndex].quantity = providerData.quantity;
                    tempArray[lineSeriesDataIndex].count = count;
                    // push to the final data
                    am5.array.each(tempArray, function (item) {
                        chartData.push(item);
                    });

                    // create range (the additional label at the bottom)
                    // se personaliza el texto de agrupacion colocando rotation: 0,
                    var range = xAxis.makeDataItem({});
                    xAxis.createAxisRange(range);

                    range.set("category", tempArray[0].category);
                    range.set("endCategory", tempArray[tempArray.length - 1].category);

                    var label = range.get("label");

                    label.setAll({
                        text: tempArray[0].provider,
                        dy: 30,
                        rotation: 0, 
                        fontWeight: "bold",
                        tooltipText: tempArray[0].provider
                    });

                    var tick = range.get("tick");
                    tick.setAll({ visible: true, strokeOpacity: 1, length: 50, location: 0 });

                    var grid = range.get("grid");
                    grid.setAll({ strokeOpacity: 1 });
                }

                // add range for the last grid
                var range = xAxis.makeDataItem({});
                xAxis.createAxisRange(range);
                range.set("category", chartData[chartData.length - 1].category);
                var tick = range.get("tick");
                tick.setAll({ visible: true, strokeOpacity: 1, length: 50, location: 1 });

                var grid = range.get("grid");
                grid.setAll({ strokeOpacity: 1, location: 1 });

                xAxis.data.setAll(chartData);
                series.data.setAll(chartData);
                lineSeries.data.setAll(chartData);

                // Make stuff animate on load
                // https://www.amcharts.com/docs/v5/concepts/animations/
                series.appear(1000);
                chart.appear(1000, 100);

            });

        </script>
    }

}


